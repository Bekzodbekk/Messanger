[
    {"id": 1, "sender_id": 2, "receiver_id": 1, "message": "Salom! Bugun dasturlash haqida gaplashmoqchiman."},
    {"id": 2, "sender_id": 1, "receiver_id": 2, "message": "Salom! Dasturlash haqida qaysi tilni tanlashni maslahat berasiz?"},
    {"id": 3, "sender_id": 2, "receiver_id": 1, "message": "Men Go tilini yaxshi ko'raman. Sizga ham tavsiya qilaman."},
    {"id": 4, "sender_id": 1, "receiver_id": 2, "message": "Go tilining afzalliklari haqida qisqacha ma'lumot bera olasizmi?"},
    {"id": 5, "sender_id": 2, "receiver_id": 1, "message": "Albatta! Go tili yuqori samaradorlik va oson o'qilishi bilan mashhur."},
    {"id": 6, "sender_id": 1, "receiver_id": 2, "message": "Dasturlashda qanday muammolar bilan duch kelasiz?"},
    {"id": 7, "sender_id": 2, "receiver_id": 1, "message": "Ko'pincha sinxronizatsiya va o'zgaruvchanlik bilan bog'liq muammolar yuzaga keladi."},
    {"id": 8, "sender_id": 1, "receiver_id": 2, "message": "Qanday qilib sinxronizatsiyani yaxshilash mumkin?"},
    {"id": 9, "sender_id": 2, "receiver_id": 1, "message": "Mutexlar va semaforlar yordamida sinxronizatsiyani yaxshilash mumkin."},
    {"id": 10, "sender_id": 1, "receiver_id": 2, "message": "Tizimni test qilishda qanday usullardan foydalanasiz?"},
    {"id": 11, "sender_id": 2, "receiver_id": 1, "message": "Unit testlar va integratsiya testlari asosiy usullardandir."},
    {"id": 12, "sender_id": 1, "receiver_id": 2, "message": "Unit testlar yozishda qanday qiyinchiliklar bo'lishi mumkin?"},
    {"id": 13, "sender_id": 2, "receiver_id": 1, "message": "Unit testlar yozishda ko'pincha test kodlarini qo'llash va qiyin masalalar bilan to'qnash kelingan."},
    {"id": 14, "sender_id": 1, "receiver_id": 2, "message": "Foydalanuvchi interfeysini qanday test qilasiz?"},
    {"id": 15, "sender_id": 2, "receiver_id": 1, "message": "UI testlarni avtomatlashtirish vositalari yordamida amalga oshiramiz."},
    {"id": 16, "sender_id": 1, "receiver_id": 2, "message": "Yangi loyiha boshlashda qanday strategiya bilan ish boshlaysiz?"},
    {"id": 17, "sender_id": 2, "receiver_id": 1, "message": "Loyihani rejalashtirish va kerakli talablarni aniqlash bilan boshlaymiz."},
    {"id": 18, "sender_id": 1, "receiver_id": 2, "message": "Rejalashtirish jarayonida qanday muhim bosqichlar mavjud?"},
    {"id": 19, "sender_id": 2, "receiver_id": 1, "message": "Loyihaning maqsadlarini aniqlash, vaqtni baholash va resurslarni taqsimlash muhim bosqichlardandir."},
    {"id": 20, "sender_id": 1, "receiver_id": 2, "message": "Loyihani bajarishda qanday risklarni oldini olish mumkin?"},
    {"id": 21, "sender_id": 2, "receiver_id": 3, "message": "Salom! Siz bilan mobil ilovalarni yaratish haqida gaplashmoqchiman."},
    {"id": 22, "sender_id": 3, "receiver_id": 2, "message": "Salom! Mobil ilovalarni yaratishda qaysi platformalarni tanlash mumkin?"},
    {"id": 23, "sender_id": 2, "receiver_id": 3, "message": "Android va iOS platformalari eng mashhur variantlardandir."},
    {"id": 24, "sender_id": 3, "receiver_id": 2, "message": "Har ikkala platforma uchun ilovalarni qanday qilib samarali yaratish mumkin?"},
    {"id": 25, "sender_id": 2, "receiver_id": 3, "message": "Kross-platforma vositalarini qo'llash orqali vaqtni tejash mumkin."},
    {"id": 26, "sender_id": 3, "receiver_id": 2, "message": "Kross-platforma vositalari qaysilarni tavsiya qilasiz?"},
    {"id": 27, "sender_id": 2, "receiver_id": 3, "message": "React Native va Flutter kabi vositalar juda foydalidir."},
    {"id": 28, "sender_id": 3, "receiver_id": 2, "message": "Ilovalarni sinovdan o'tkazishda qanday yondashuvlar mavjud?"},
    {"id": 29, "sender_id": 2, "receiver_id": 3, "message": "Yozuvchilar va foydalanuvchilar testlarini o'tkazish orqali ilovani tekshirish mumkin."},
    {"id": 30, "sender_id": 3, "receiver_id": 2, "message": "Ilova uchun qanday qilib yaxshi foydalanuvchi tajribasini yaratish mumkin?"},
    {"id": 31, "sender_id": 2, "receiver_id": 4, "message": "Salom! Siz bilan veb dasturlash haqida gaplashmoqchiman."},
    {"id": 32, "sender_id": 4, "receiver_id": 2, "message": "Salom! Veb dasturlashda qaysi texnologiyalarni qo'llashni maslahat berasiz?"},
    {"id": 33, "sender_id": 2, "receiver_id": 4, "message": "HTML, CSS, va JavaScript eng asosiy texnologiyalardandir."},
    {"id": 34, "sender_id": 4, "receiver_id": 2, "message": "JavaScript uchun qanday kutubxonalar va freymvorklarni tavsiya qilasiz?"},
    {"id": 35, "sender_id": 2, "receiver_id": 4, "message": "React, Angular, va Vue.js juda mashhur va qulay."},
    {"id": 36, "sender_id": 4, "receiver_id": 2, "message": "React va Angular o'rtasida qanday farqlar mavjud?"},
    {"id": 37, "sender_id": 2, "receiver_id": 4, "message": "React komponentlar asosida ishlaydi, Angular esa MVC modeliga asoslangan."},
    {"id": 38, "sender_id": 4, "receiver_id": 2, "message": "Veb dasturlashda qanday xavfsizlik choralarini ko'rish kerak?"},
    {"id": 39, "sender_id": 2, "receiver_id": 4, "message": "Xavfsizlik choralariga shifrlash, autentifikatsiya va ruxsatlarni qo'llash kiradi."},
    {"id": 40, "sender_id": 4, "receiver_id": 2, "message": "Ma'lumotlar bazasini qanday boshqarish yaxshiroq?"},
    {"id": 41, "sender_id": 2, "receiver_id": 5, "message": "Salom! Siz bilan bulutli xizmatlar haqida gaplashmoqchiman."},
    {"id": 42, "sender_id": 5, "receiver_id": 2, "message": "Salom! Bulutli xizmatlarda qanday xizmatlar mavjud?"},
    {"id": 43, "sender_id": 2, "receiver_id": 5, "message": "Amazon Web Services, Google Cloud, va Microsoft Azure mashhur bulutli xizmatlardandir."},
    {"id": 44, "sender_id": 5, "receiver_id": 2, "message": "AWS va Azure o'rtasida qanday farqlar mavjud?"},
    {"id": 45, "sender_id": 2, "receiver_id": 5, "message": "AWS kengroq xizmatlar va global infra tuzilishga ega, Azure esa Microsoft mahsulotlari bilan yaxshi integratsiyalangan."},
    {"id": 46, "sender_id": 5, "receiver_id": 2, "message": "Bulutli xizmatlar uchun qanday saqlash variantlarini tanlash mumkin?"},
    {"id": 47, "sender_id": 2, "receiver_id": 5, "message": "Blokirovka, ob'ekt saqlash, va fayl saqlash variantlari mavjud."},
    {"id": 48, "sender_id": 5, "receiver_id": 2, "message": "Bulutli xizmatlarni qanday qilib samarali boshqarish mumkin?"},
    {"id": 49, "sender_id": 2, "receiver_id": 5, "message": "Monitoring, avtomatlashtirish, va optimizatsiya orqali samaradorlikni oshirish mumkin."},
    {"id": 50, "sender_id": 5, "receiver_id": 2, "message": "Bulutli xavfsizlikni qanday ta'minlash mumkin?"},
    {"id": 51, "sender_id": 2, "receiver_id": 6, "message": "Salom! Siz bilan ma'lumotlar bazasini boshqarish haqida gaplashmoqchiman."},
    {"id": 52, "sender_id": 6, "receiver_id": 2, "message": "Salom! Ma'lumotlar bazasini boshqarishda qaysi tizimlarni tavsiya qilasiz?"},
    {"id": 53, "sender_id": 2, "receiver_id": 6, "message": "MySQL, PostgreSQL, va MongoDB eng mashhur tizimlardandir."},
    {"id": 54, "sender_id": 6, "receiver_id": 2, "message": "MySQL va PostgreSQL o'rtasidagi farqlar nima?"},
    {"id": 55, "sender_id": 2, "receiver_id": 6, "message": "MySQL SQL asosida ishlaydi, PostgreSQL esa kengaytirilgan SQL qo'llab-quvvatlaydi va JSON ma'lumotlarni boshqarishda kuchli."},
    {"id": 56, "sender_id": 6, "receiver_id": 2, "message": "Ma'lumotlar bazasini optimallashtirishda qanday strategiyalar mavjud?"},
    {"id": 57, "sender_id": 2, "receiver_id": 6, "message": "Indexlash, so'rovlarni optimallashtirish, va ma'lumotlar replikasiyasi yordam beradi."},
    {"id": 58, "sender_id": 6, "receiver_id": 2, "message": "NoSQL bazalarini qanday holatlarda qo'llash kerak?"},
    {"id": 59, "sender_id": 2, "receiver_id": 6, "message": "NoSQL bazalari katta hajmdagi ma'lumotlarni tezkor ishlash va skalab olish uchun ideal."},
    {"id": 60, "sender_id": 6, "receiver_id": 2, "message": "Ma'lumotlar bazasi xavfsizligini qanday ta'minlash mumkin?"},
    {"id": 61, "sender_id": 2, "receiver_id": 7, "message": "Salom! Siz bilan API dizayni haqida gaplashmoqchiman."},
    {"id": 62, "sender_id": 7, "receiver_id": 2, "message": "Salom! API dizayni uchun qanday yondashuvlar mavjud?"},
    {"id": 63, "sender_id": 2, "receiver_id": 7, "message": "REST va GraphQL eng mashhur dizayn yondashuvlaridir."},
    {"id": 64, "sender_id": 7, "receiver_id": 2, "message": "REST va GraphQL o'rtasidagi farqlar nima?"},
    {"id": 65, "sender_id": 2, "receiver_id": 7, "message": "REST HTTP metodlariga asoslanadi va ma'lumotlarni URL orqali uzatadi, GraphQL esa mijozga kerakli ma'lumotlarni so'rash imkonini beradi."},
    {"id": 66, "sender_id": 7, "receiver_id": 2, "message": "API xavfsizligini qanday ta'minlash mumkin?"},
    {"id": 67, "sender_id": 2, "receiver_id": 7, "message": "Autentifikatsiya va avtorizatsiya, shifrlash, va so'rovni cheklash orqali xavfsizlikni ta'minlash mumkin."},
    {"id": 68, "sender_id": 7, "receiver_id": 2, "message": "API versiyalash qanday amalga oshiriladi?"},
    {"id": 69, "sender_id": 2, "receiver_id": 7, "message": "API versiyalash URL yoki so'rov sarlavhalarida versiya raqamini ko'rsatish orqali amalga oshiriladi."},
    {"id": 70, "sender_id": 7, "receiver_id": 2, "message": "API dokumentatsiyasi qanday tayyorlanadi?"},
    {"id": 71, "sender_id": 2, "receiver_id": 8, "message": "Salom! Siz bilan DevOps va CI/CD haqida gaplashmoqchiman."},
    {"id": 72, "sender_id": 8, "receiver_id": 2, "message": "Salom! DevOps va CI/CD nima uchun muhim?"},
    {"id": 73, "sender_id": 2, "receiver_id": 8, "message": "DevOps dastur ishlab chiqish va operatsiyalarni birlashtirishni maqsad qiladi, CI/CD esa kodni ishlab chiqishdan chiqarish jarayonini avtomatlashtiradi."},
    {"id": 74, "sender_id": 8, "receiver_id": 2, "message": "CI/CD pipeline qanday quriladi?"},
    {"id": 75, "sender_id": 2, "receiver_id": 8, "message": "CI/CD pipeline kodni sinash, qurish va joylashtirish jarayonlarini avtomatlashtirish orqali quriladi."},
    {"id": 76, "sender_id": 8, "receiver_id": 2, "message": "DevOps jarayonlarida qanday asboblarni qo'llash mumkin?"},
    {"id": 77, "sender_id": 2, "receiver_id": 8, "message": "Jenkins, Docker, va Kubernetes kabi vositalar DevOps jarayonlarida keng qo'llaniladi."},
    {"id": 78, "sender_id": 8, "receiver_id": 2, "message": "Docker qanday yordam beradi?"},
    {"id": 79, "sender_id": 2, "receiver_id": 8, "message": "Docker ilovalarni konteynerlarga joylashtirish orqali muhitlar o'rtasidagi farqlarni kamaytiradi."},
    {"id": 80, "sender_id": 8, "receiver_id": 2, "message": "Kubernetes qanday qilib konteynerlarni boshqarishga yordam beradi?"},
    {"id": 81, "sender_id": 2, "receiver_id": 9, "message": "Salom! Siz bilan tarmoq xavfsizligi haqida gaplashmoqchiman."},
    {"id": 82, "sender_id": 9, "receiver_id": 2, "message": "Salom! Tarmoq xavfsizligida qanday eng yaxshi amaliyotlar mavjud?"},
    {"id": 83, "sender_id": 2, "receiver_id": 9, "message": "Tarmoq xavfsizligini ta'minlash uchun shifrlash, xavfsizlik devorlari, va tarmoq monitoringi muhimdir."},
    {"id": 84, "sender_id": 9, "receiver_id": 2, "message": "Xavfsizlik devorlari qanday ishlaydi?"},
    {"id": 85, "sender_id": 2, "receiver_id": 9, "message": "Xavfsizlik devorlari tarmoq orqali o'tayotgan ma'lumotlarni filtrlaydi va xavfsizlik siyosatlariga asoslanib so'rovlarni bloklaydi yoki ruxsat beradi."},
    {"id": 86, "sender_id": 9, "receiver_id": 2, "message": "Tarmoq monitoringi qanday amalga oshiriladi?"},
    {"id": 87, "sender_id": 2, "receiver_id": 9, "message": "Tarmoq monitoringi orqali trafikni kuzatish va tahdidlarni aniqlash uchun vositalar qo'llaniladi."},
    {"id": 88, "sender_id": 9, "receiver_id": 2, "message": "Tarmoq xavfsizligini qanday tekshirish mumkin?"},
    {"id": 89, "sender_id": 2, "receiver_id": 9, "message": "Xavfsizlik skanerlari va tarmoq auditlari orqali xavfsizlikni tekshirish mumkin."},
    {"id": 90, "sender_id": 9, "receiver_id": 2, "message": "Tarmoq xavfsizligini ta'minlashda qanday qiyinchiliklar bo'lishi mumkin?"}
]
